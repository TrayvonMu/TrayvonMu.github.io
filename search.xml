<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo博客搭建]]></title>
    <url>%2Fposts%2Fb8f4bd70.html</url>
    <content type="text"><![CDATA[Hexo博客搭建写在前面我使用的计算机为Windows平台，并以此为例，请确保在计算机上已经安装过Node.js和Git，然后在正确的路径执行以下命令： 1234npm install hexo-cli -g hexo init blog cd blog npm install 基本配置根据需要编辑文件_config.yml并应用自己的配置： 站点配置 1234567title: Tr4yv0n's Blogsubtitle:description:keywords: Programming,WebSec...etcauthor: Trayvonlanguage:zh-Hanstimezone: Asia/Shanghai URL配置 首先，安装依赖： 1npm install hexo-abbrlink --save 配置： 1234567url: http://yoursite.com root: / permalink: post/:abbrlink.htmlabbrlink: alg: crc32 # support crc16(default) and crc32 rep: hex # support dec(default) and hexpermalink_defaults: 部署配置 设置远程存储库。例如，创建您的GitHub页面。 在本地计算机上安装依赖项： 1npm install hexo-deployer-git --save 配置网站_config.yml 1234deploy: type: git repo: https://github.com/YourgithubName/YourgithubName.github.io.git branch: master 注意：需要将配置项中的repo更改为自己的仓库路径，且要注意每个配置选项的冒号后面要有一个空格，必要严格参照此规定格式，否则配置不会生效！！！ 请注意，要将博客部署到远程服务器，您必须具有用于编写访问权限的正确凭据。请参阅使用SSH连接到GitHub。 如果还想将博客部署到自己的Git服务器中，请参阅服务器上的Git - 设置服务器。 主题配置 首先，安装主题相关依赖： 1git clone https://github.com/theme-next/hexo-theme-next themes / next 配置： 在网站配置文件_config.yml 1theme: next NEXT主题相关配置根据需要编辑文件themes/next/_config.yml并应用自己的配置： 图标配置 访问https://realfavicongenerator.net并获取favicon。 配置主题： 123favicon： small: /favicon-16x16-next.png medium: /favicon-32x32-next.png 菜单配置 生成菜单页面 123hexo new page "tags"hexo new page "categories"hexo new page "about" 分别编辑他们的菜单： 123type: "tags"type: "categories"type: "about" 配置 12345menu: home: / || home about: /about/ || user categories: /categories/ || th archives: /archives/ || archive about页面可通过添加一些内容来自定义页面。 方案配置将其从Muse（默认方案）更改为Mist。 1scheme: Mist 社交链接配置123social: GitHub: https://github.com/PeichengLiu || github E-Mail: mailto:user@example.com || envelope 边栏头像12avatar: url: /avatar.jpg CC许可声明1reative_commons: by-nc-sa 本地搜索 首先，安装依赖项： 1npm install hexo-generator-searchdb --save 配置： 12local_search: enable: true 一些小操作内容压缩Gulp简介 gulp.js 是一种基于流的，代码优于配置的新一代构建工具。具体前往官网查看反正是一个基于 node 的用于自动化的工具，和 Grunt 比较类似，不过亮点是 流 和 写代码 ，所以会比 Grunt 快一点。 首先，安装依赖项： 1npm install gulp gulp-csso gulp-htmlmin gulp-htmlclean babel-core babel-preset-es2015 gulp-babel gulp-uglify --save-dev 创建一个gulpfile.js在博客根目录中命名的文件，然后将以下代码粘贴到其中： 12345678910111213141516171819202122232425262728293031323334const gulp = require('gulp');const csso = require('gulp-csso');const htmlmin = require('gulp-htmlmin');const htmlclean = require('gulp-htmlclean');const babel = require('gulp-babel');const uglify = require('gulp-uglify');gulp.task('minify-css', () =&gt; &#123; return gulp.src('./public/**/*.css') .pipe(csso()) .pipe(gulp.dest('./public'));&#125;);gulp.task('minify-js', () =&gt; &#123; return gulp.src(['./public/**/*.js', '!./public/**/*.min.js']) .pipe(babel(&#123; presets: ['es2015'] &#125;)) .pipe(uglify()) .pipe(gulp.dest('./public'));&#125;);gulp.task('minify-html', () =&gt; &#123; return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true &#125;)) .pipe(gulp.dest('./public'))&#125;);gulp.task('default', ['minify-css', 'minify-js', 'minify-html']); 在 hexo g 之后在 cmd 里敲入 gulp 回车就可以啦推荐姿势： 1hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d 更为推（偷）荐（懒）的方式：编辑名为package.json这样的文件 123456&#123; // ... pretend to be comments here, there is no syntax for comments in JSON "scripts": &#123; "publish": "hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d" &#125;&#125; 从现在开始，就可以使用以下命令部署博客 1npm run publish 有关参考Hexo命令，npm-run-script，Gulp Tips:配置的时候遇到了个坑，多方查找后才解决了问题： 在配置webpack.config.js打包的时候,出现Error: Cannot find module &#39;@babel/core&#39;错误。 最初以为是babel-core没有安装上。重装了好几遍babel-core还是不行 官方默认babel-loader | babel 对应的版本需要一致: 即babel-loader需要搭配最新版本babel* 两种解决方案: 回退低版本 1npm install -D babel-loader@7 babel-core babel-preset-env 更新到最高版本: 1npm install -D babel-loader @babel/core @babel/preset-env webpack 参考资料：https://www.cnblogs.com/soyxiaobi/p/9554565.html 音乐播放器集成 在文件中附加以下代码themes/next/layout/_partials/footer.swig： 123&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css" type="text/css"&gt;&lt;script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js"&gt;&lt;/script&gt;&lt;script src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"&gt;&lt;/script&gt; 按以下代码添加音乐到您的帖子： 1&lt;div class="aplayer" data-id="857619" data-server="netease" data-type="song" data-mode="single"&gt;&lt;/div&gt; 更多配置选项，请查看MetingJS。]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fposts%2F4a17b156.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
